<% content_for(:title,"みんなが積み上げた山")%>
<div class="container py-5">
  <div class="bg-neutral rounded-lg shadow-lg p-5">
    <div class="text-center">
      <h2 class="text-2xl lg:text-3xl mb-5 font-bold">みんなが積み上げた山</h2>
    </div>
    <div data-turbo="false">
      <div class="artboard px-5">
        <div id="map"></div>
      </div>
      <div class="text-center mt-5">
        <%= link_to 'ホーム画面へ戻る', root_path, class:"link link-primary"%>
      </div>
    </div>
  </div>
</div>

<style>
  #map {
      width: 100%;
      height: 80vh;
      margin: 0 auto;
    }
</style>

<script>
  let map;
  let mountainMarkers = [];
  let infoWindow = [];

  let mountains = gon.mountains;
  const centerPosition = { lat: 37.255318, lng: 138.522137 };

  function initMap() {
    map = new google.maps.Map(document.getElementById("map"), {
      streetViewControl: false,
      mapTypeControl: false,
      fullscreenControl: false,
      center: centerPosition,
      zoom: 5.7,
    });

    const markerEvent = (i) => {
      mountainMarkers[i].addListener('click',()=>{
        for(const j in mountainMarkers){
          // マーカーをクリックしたときに他のウィンドウを閉じる
          infoWindow[j].close(map, mountainMarkers[j]);
        }
        // クリックされたマーカーのウィンドウを表示する
        infoWindow[i].open(map, mountainMarkers[i]);
        map.setZoom(9)
        map.setCenter(mountainMarkers[i].getPosition());
      }, { passive: true });
    }

    for(let i = 0; i < mountains.length; i++){

      // 緯度・経度のデータを作成
      const markerLatLng = new google.maps.LatLng({
        lat: mountains[i]['latitude'],
        lng: mountains[i]['longitude'],
      });
      // マーカーの設定
      const markerOption = {
        position: markerLatLng,
        map,
        icon: function(){
                if (mountains[i]['elevation'] >= 3000) {
                  return {
                    url: "<%= asset_path 'mountain_marker_3000.svg' %>",
                  }; 
                } else if (mountains[i]['elevation'] >= 2500) {
                  return {
                    url: "<%= asset_path 'mountain_marker_2500.svg' %>",
                  };
                } else if (mountains[i]['elevation'] >= 2000) {
                  return {
                    url: "<%= asset_path 'mountain_marker_2000.svg' %>",
                  };
                } else if (mountains[i]['elevation'] >= 1000) {
                  return {
                    url: "<%= asset_path 'mountain_marker_1000.svg' %>",
                  };
                } else {
                  return {
                    url: "<%= asset_path 'mountain_marker.svg' %>",
                  };
                }
              }(),
      };

      mountainMarkers[i] = new google.maps.Marker(markerOption);

      infoWindow[i] = new google.maps.InfoWindow({
        content: `<p class="text-xl">${mountains[i]['name']}</p>`+
                 `<p class="text-base">標高 ${mountains[i]['elevation']} m</p>`,
        maxWidth: 300,
      });

      markerEvent(i);
    }
  }
</script>

<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&key=<%= ENV['GOOGLE_MAP_API_KEY'] %>&callback=initMap" async defer></script>