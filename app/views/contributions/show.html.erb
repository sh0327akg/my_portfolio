<% content_for(:title,"草刈結果")%>
<% set_meta_tags og: {
                        description: 'あなたのGitHubの草、生えたままじゃありませんか？早速刈り取ってみましょう!',
                        image: image_url('ogp_result.png'),
                      },
            twitter: {
                        card: 'summary_large_image',
                        image: image_url('ogp_result.png')
                      } %>
<div class="container">
  <%# <div id="loading">
    <div id="loader">
      <p class="text-2xl">草刈中...</p>
      <progress class="progress" value="0" max="100"></progress>
    </div>
  </div> %>
  <div id="main-container" class="w-full h-full">
    <div class="p-8">
      <div  class="bg-neutral rounded-lg shadow-lg p-5">
        <h2 class="text-2xl lg:text-3xl text-center">草刈結果</h2>
        <%= render "result", contribution: @contribution %>
        <div data-turbo="false">
          <div id="map"></div>
        </div>
        <p class="text-base-500 text-right text-sm mt-2">「日本の山岳標高一覧」（国土地理院） をもとに作成</p>
      </div>
      <div class="w-60 mx-auto my-8">
        <div data-turbo="false">
          <%= link_to 'みんなの山を見に行く', contributions_path, class:"btn btn-primary grid place-items-center"%>
          <%= link_to "https://twitter.com/intent/tweet?text=草刈報告いたします！%0A#{@contribution.display_contribution_number}%0A#{@contribution.display_mountain}%0A%23草刈山雄%20%23草刈報告%0A&url=#{ request.url }", target: '_blank', class:"flex btn bg-[#55acee] mt-5" do %>
            <%= image_tag 'logo-white.svg', size:"38x38", class:"grid place-items-center"%>
            <div class="text-white ml-3">ツイートして共有</div>
          <% end %>
          <div class="text-center mt-5">
            <%= link_to 'ホーム画面へ戻る', root_path, class:"link link-primary"%>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  #map {
      margin: 0 auto;
      height: 300px;
      width: 80%;
    }
</style>

<script>
  // const loading = document.getElementById('loading');
  const mainContainer = document.getElementById('main-container');

  // mainContainer.style.display ="none";

  // setTimeout(()=>{
  //     loading.style.display = "none";
  //     mainContainer.style.display = "block";
  //   }, 3000);

  const mountain = gon.mountain;
  const markerposition = {
        lat: mountain['latitude'],
        lng: mountain['longitude'], 
      }


  function initMap(){
    const map = new google.maps.Map(document.getElementById("map"), {
      streetViewControl: false,
      mapTypeControl: false,
      fullscreenControl: false,
      center: markerposition,
      zoom: 12,
    });

    const mountainMarker = new google.maps.Marker({
      position: markerposition,
      map,
      icon: function(){
              if (mountain['elevation'] >= 3000) {
                return {
                  url: "<%= asset_path 'mountain_marker_3000.svg' %>",
                }; 
              } else if (mountain['elevation'] >= 2500) {
                return {
                  url: "<%= asset_path 'mountain_marker_2500.svg' %>",
                };
              } else if (mountain['elevation'] >= 2000) {
                return {
                  url: "<%= asset_path 'mountain_marker_2000.svg' %>",
                };
              } else if (mountain['elevation'] >= 1000) {
                return {
                  url: "<%= asset_path 'mountain_marker_1000.svg' %>",
                };
              } else {
                return {
                  url: "<%= asset_path 'mountain_marker.svg' %>",
                };
              }
            }(),
    });
  }

</script>
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&key=<%= ENV['GOOGLE_MAP_API_KEY'] %>&callback=initMap" async defer></script>